name: Docker Build & Push
# Build & Push builds the simapp docker image on every push to main and
# and pushes the image to https://ghcr.io/cosmos/simapp
on:
  pull_request:
    paths:
      - "Dockerfile"
      - ".github/workflows/docker.yml"
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5
      - "v[0-9]+.[0-9]+.[0-9]+-(canary|alpha|beta)(.[0-9])?" # Push events to matching v*, i.e. v20.15.10-alpha.1, v1.2.3-beta.0
  workflow_dispatch:
    inputs:
      tags:
        description: "SDK version (e.g 0.47.1)"
        required: true
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ vars.IMAGE_NAME || github.event.repository.name }}
  # build args for the Dockerfile
  BUILD_ARGS: ${{ vars.BUILD_ARGS || '' }}
  # platform for the Docker image
  BUILD_PLATFORMS: ${{ vars.BUILD_PLATFORMS || 'linux/amd64,linux/arm64' }}

# Set concurrency for this workflow to cancel in-progress jobs if retriggered.
# The github.ref is only available when triggered by a PR so fall back to github.run_id for other cases.
# The github.run_id is unique for each run, giving each such invocation it's own unique concurrency group.
# Basically, if you push to a PR branch, jobs that are still running for that PR will be cancelled.
# But jobs started because of a merge to main or a release tag push are not cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tags || github.ref }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern={{version}},value=${{ inputs.tags }},enable=${{ inputs.tags != '' }}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short
          flavor: |
            latest=false

      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        uses: docker/build-push-action@v6
        with:
          context: "."
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ env.BUILD_ARGS }}
          platforms: ${{ env.BUILD_PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
